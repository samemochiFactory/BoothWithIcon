{"version":3,"file":"popup.js","sources":["../../src/popup.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', async () => {\r\n    // Ë®≠ÂÆö„ÇíË™≠„ÅøËæº„ÇÄ\r\n    chrome.storage.local.get(['namingRules', 'includeIcon'], (result) => {\r\n        const namingRules = result.namingRules || [];\r\n        if (namingRules.length === 0) {\r\n            namingRules = ['„Éï„Ç°„Ç§„É´Âêç']; // „Éá„Éï„Ç©„É´„Éà„Åß„Äå„Éï„Ç°„Ç§„É´Âêç„Äç„ÇíË®≠ÂÆö\r\n            // „Åì„ÅÆ„Éá„Éï„Ç©„É´„ÉàÂÄ§„Çí„Çπ„Éà„É¨„Éº„Ç∏„Å´„ÇÇ‰øùÂ≠ò„Åô„ÇãÔºà‰ªªÊÑè„Å†„Åå„ÄÅÊ¨°ÂõûË™≠„ÅøËæº„ÅøÊôÇ„ÅÆ‰∏ÄË≤´ÊÄß„ÅÆ„Åü„ÇÅÊé®Â•®Ôºâ\r\n            chrome.storage.local.set({ namingRules });\r\n        }\r\n        document.getElementById('namingRuleShopProduct').checked = namingRules.includes('„Ç∑„Éß„ÉÉ„ÉóÂêç');\r\n        document.getElementById('namingRuleProductName').checked = namingRules.includes('ÂïÜÂìÅÂêç');\r\n        document.getElementById('namingRuleFileName').checked = namingRules.includes('„Éï„Ç°„Ç§„É´Âêç');\r\n        // document.getElementById('includeIcon').checked = includeIcon;\r\n    });\r\n\r\n    // Â§âÊõ¥„Ç§„Éô„É≥„Éà„Åß‰øùÂ≠ò\r\n    document.querySelectorAll('input[type=\"checkbox\"]').forEach(checkbox => {\r\n        checkbox.addEventListener('change', () => {\r\n            const namingRules = [];\r\n            if (document.getElementById('namingRuleShopProduct').checked) namingRules.push('„Ç∑„Éß„ÉÉ„ÉóÂêç');\r\n            if (document.getElementById('namingRuleProductName').checked) namingRules.push('ÂïÜÂìÅÂêç');\r\n            if (document.getElementById('namingRuleFileName').checked) namingRules.push('„Éï„Ç°„Ç§„É´Âêç');\r\n            if (namingRules.length === 0) {\r\n                namingRules.push('„Éï„Ç°„Ç§„É´Âêç');\r\n                document.getElementById('namingRuleFileName').checked = true; // UI„Å´„ÇÇÂèçÊò†\r\n            }\r\n            chrome.storage.local.set({\r\n                namingRules\r\n            });\r\n        });\r\n    });\r\n    // // „Éï„Ç©„É´„ÉÄÂêçË°®Á§∫\r\n    // const folderDisplay = document.getElementById('selectedFolderName');\r\n    // const handleIdbKey = 'folderHandle'; // ‰øùÂ≠ò„Ç≠„Éº\r\n\r\n    // const folderName = await getFolderNameFromStorage();\r\n    // folderDisplay.textContent = folderName ? `üìÅ ${folderName}` : 'ÔºàÊú™ÈÅ∏ÊäûÔºâ';\r\n});\r\ndocument.getElementById('applySettingsBtn').addEventListener('click', () => {\r\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\r\n        if (tabs[0]?.id) {\r\n            chrome.tabs.reload(tabs[0].id); // „Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Å™„Çø„Éñ„Çí„É™„É≠„Éº„Éâ\r\n        }\r\n    });\r\n});\r\n\r\n// let selectedDirectoryHandle = null;\r\n\r\n// document.addEventListener('DOMContentLoaded', () => {\r\n//     const folderPickerBtn = document.getElementById('folderPicker');\r\n//     const folderNameDisplay = document.getElementById('selectedFolderName');\r\n//     const fetchIconBtn = document.getElementById('fetchIconBtn');\r\n\r\n//     folderPickerBtn.addEventListener('click', async () => {\r\n//         try {\r\n//             // showDirectoryPicker „ÅØ File System Access APIÔºàÊñ∞„Åó„ÅÑAPIÔºâ\r\n//             selectedDirectoryHandle = await window.showDirectoryPicker();\r\n\r\n//             // „Éï„Ç©„É´„ÉÄÂêç„ÇíÁîªÈù¢„Å´Ë°®Á§∫\r\n//             folderNameDisplay.textContent = `ÈÅ∏Êäû„Åï„Çå„Åü„Éï„Ç©„É´„ÉÄ: ${selectedDirectoryHandle.name}`;\r\n\r\n//             // „Éú„Çø„É≥„ÇíÊúâÂäπÂåñ\r\n//             fetchIconBtn.disabled = false;\r\n\r\n//         } catch (err) {\r\n//             if (err.name === 'AbortError') {\r\n//                 console.log(\"„Éï„Ç©„É´„ÉÄÈÅ∏Êäû„Åå„Ç≠„É£„É≥„Çª„É´„Åï„Çå„Åæ„Åó„Åü\");\r\n//                 console.log(err);\r\n//             } else {\r\n//                 console.error(\"„Éï„Ç©„É´„ÉÄÈÅ∏Êäû„Ç®„É©„Éº:\", err);\r\n//                 folderNameDisplay.textContent = '‚ùå „Éï„Ç©„É´„ÉÄÈÅ∏Êäû„Å´Â§±Êïó„Åó„Åæ„Åó„Åü';\r\n//                 fetchIconBtn.disabled = true;\r\n//             }\r\n//         }\r\n//     });\r\n\r\n//     //fetchIconBtn „ÅÆ„ÇØ„É™„ÉÉ„ÇØÂá¶ÁêÜ\r\n//     fetchIconBtn.addEventListener('click', async () => {\r\n//         const urlInput = document.getElementById('shopUrl').value.trim();\r\n//         if (!urlInput || !selectedDirectoryHandle) {\r\n//             alert(\"URL„Å®„Éï„Ç©„É´„ÉÄ„ÇíÈÅ∏Êäû„Åó„Å¶„Åè„Å†„Åï„ÅÑ\");\r\n//             return;\r\n//         }\r\n//         try {\r\n//             const thumbnailBlob = await fetchThumbnail(urlInput);\r\n//             const icoBlob = await convertPngToIcon(thumbnailBlob);\r\n\r\n//             const desktopIniContent = await loadLocalFile('desktop.ini');\r\n//             const batContent = await loadLocalFile('setIcon.bat');\r\n\r\n//             await saveToFolder(selectedDirectoryHandle, \"boothThumbnail.ico\", icoBlob);\r\n//             await saveToFolder(selectedDirectoryHandle, \"desktop.ini\", new Blob([desktopIniContent], { type: 'text/plain' }));\r\n//             await saveToFolder(selectedDirectoryHandle, \"setIcon.bat\", new Blob([batContent], { type: 'text/plain' }));\r\n\r\n//             alert(\"„Éï„Ç©„É´„ÉÄ„Å´3„Éï„Ç°„Ç§„É´„Çí‰øùÂ≠ò„Åó„Åæ„Åó„ÅüÔºÅ\");\r\n//         } catch (err) {\r\n//             console.error(\"‰øùÂ≠ò‰∏≠„Å´„Ç®„É©„Éº:\", err);\r\n//             alert(\"‰øùÂ≠ò„Å´Â§±Êïó„Åó„Åæ„Åó„Åü\");\r\n//         }\r\n//     });\r\n// });\r\n\r\n// async function loadLocalFile(filename) {\r\n//     const url = chrome.runtime.getURL(`static/${filename}`);\r\n//     const response = await fetch(url);\r\n//     if (!response.ok) throw new Error(`${filename} „ÅÆË™≠„ÅøËæº„Åø„Å´Â§±Êïó„Åó„Åæ„Åó„Åü`);\r\n//     return await response.text();\r\n// }\r\n\r\n// async function getFolderNameFromStorage() {\r\n//     const stored = await chrome.storage.local.get('folderHandle');\r\n//     if (!stored.folderHandle) return null;\r\n\r\n//     try {\r\n//         const handle = await window.showDirectoryPicker({ startIn: stored.folderHandle });\r\n//         return handle.name;\r\n//     } catch (e) {\r\n//         return null;\r\n//     }\r\n// }\r\n\r\n// async function fetchThumbnail(thumbnailUrl) {\r\n//     return new Promise((resolve, reject) => {\r\n//         chrome.runtime.sendMessage(\r\n//             {\r\n//                 action: \"fetchThumbnail\",\r\n//                 url: thumbnailUrl\r\n//             },\r\n//             (response) => {\r\n//                 if (response && response.data) {\r\n//                     // ArrayBuffer „ÇíÂèó„ÅëÂèñ„Å£„ÅüÂâçÊèê„Åß Blob „Å´Â§âÊèõ\r\n//                     const byteArray = new Uint8Array(response.data);\r\n//                     const blob = new Blob([byteArray]);\r\n//                     resolve(blob);\r\n//                 } else {\r\n//                     reject(new Error(\"ÂïÜÂìÅ„Éá„Éº„Çø„ÅÆÂèñÂæó„Å´Â§±Êïó„Åó„Åæ„Åó„Åü\"));\r\n//                 }\r\n//             }\r\n//         );\r\n//     });\r\n// }\r\n\r\n// async function convertPngToIcon(thumbnailBlob) {\r\n//     try {\r\n//         // PNGÁîªÂÉè„ÇíCanvas„Å´ÊèèÁîª\r\n//         const canvas = document.createElement('canvas');\r\n//         const ctx = canvas.getContext('2d');\r\n//         const size = 256; // ICOÊúÄÂ§ß„Çµ„Ç§„Ç∫\r\n//         canvas.width = size;\r\n//         canvas.height = size;\r\n\r\n//         // ÁîªÂÉè„ÅÆË™≠„ÅøËæº„Åø„Å®ÊèèÁîª„ÇíÂæÖÊ©ü\r\n//         await new Promise((resolve, reject) => {\r\n//             const img = new Image();\r\n//             img.onload = () => {\r\n//                 ctx.drawImage(img, 0, 0, size, size);\r\n//                 // „É°„É¢„É™„É™„Éº„ÇØ„ÇíÈò≤Ê≠¢\r\n//                 URL.revokeObjectURL(img.src);\r\n//                 resolve();\r\n//             };\r\n//             img.onerror = (e) => reject(new Error(`failed to load thumbnail : ${e}`));\r\n//             img.src = URL.createObjectURL(thumbnailBlob);\r\n//         });\r\n\r\n//         // Canvas„Åã„ÇâPNG Blob„ÇíÁîüÊàê\r\n//         const pngBlob = await new Promise((resolve, reject) => {\r\n//             canvas.toBlob((blob) => {\r\n//                 if (!blob) reject(new Error(\"failed to generate PNG blob\"));\r\n//                 else resolve(blob);\r\n//             }, 'image/png');\r\n//         });\r\n\r\n//         // PNG Blob„ÇíICOÂΩ¢Âºè„Å´Â§âÊèõ\r\n//         const converter = new PngIcoConverter();\r\n//         const icoBlob = await converter.convertToBlobAsync([{ png: pngBlob }]);\r\n\r\n//         return icoBlob;\r\n//     } catch (error) {\r\n//         console.error(\"failed to converting .ico : \", error);\r\n//         throw error;\r\n//     }\r\n// }"],"names":[],"mappings":"AAAA,SAAS,iBAAiB,oBAAoB,YAAY;AAEtD,SAAO,QAAQ,MAAM,IAAI,CAAC,eAAe,aAAa,GAAG,CAAC,WAAW;AACjE,UAAM,cAAc,OAAO,eAAe;AAC1C,QAAI,YAAY,WAAW,GAAG;AAC1B,oBAAc,CAAC,OAAO;AAEtB,aAAO,QAAQ,MAAM,IAAI,EAAE,YAAa,CAAA;AAAA,IAC3C;AACD,aAAS,eAAe,uBAAuB,EAAE,UAAU,YAAY,SAAS,OAAO;AACvF,aAAS,eAAe,uBAAuB,EAAE,UAAU,YAAY,SAAS,KAAK;AACrF,aAAS,eAAe,oBAAoB,EAAE,UAAU,YAAY,SAAS,OAAO;AAAA,EAE5F,CAAK;AAGD,WAAS,iBAAiB,wBAAwB,EAAE,QAAQ,cAAY;AACpE,aAAS,iBAAiB,UAAU,MAAM;AACtC,YAAM,cAAc,CAAA;AACpB,UAAI,SAAS,eAAe,uBAAuB,EAAE,QAAS,aAAY,KAAK,OAAO;AACtF,UAAI,SAAS,eAAe,uBAAuB,EAAE,QAAS,aAAY,KAAK,KAAK;AACpF,UAAI,SAAS,eAAe,oBAAoB,EAAE,QAAS,aAAY,KAAK,OAAO;AACnF,UAAI,YAAY,WAAW,GAAG;AAC1B,oBAAY,KAAK,OAAO;AACxB,iBAAS,eAAe,oBAAoB,EAAE,UAAU;AAAA,MAC3D;AACD,aAAO,QAAQ,MAAM,IAAI;AAAA,QACrB;AAAA,MAChB,CAAa;AAAA,IACb,CAAS;AAAA,EACT,CAAK;AAOL,CAAC;AACD,SAAS,eAAe,kBAAkB,EAAE,iBAAiB,SAAS,MAAM;AACxE,SAAO,KAAK,MAAM,EAAE,QAAQ,MAAM,eAAe,QAAQ,CAAC,SAAS;AAvCvE;AAwCQ,SAAI,UAAK,CAAC,MAAN,mBAAS,IAAI;AACb,aAAO,KAAK,OAAO,KAAK,CAAC,EAAE,EAAE;AAAA,IAChC;AAAA,EACT,CAAK;AACL,CAAC;"}