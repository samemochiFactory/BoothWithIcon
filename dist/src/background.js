chrome.runtime.onMessage.addListener(((e,r,o)=>{if("fetchItemInfo"===e.action)return console.log("fetchItemInfo"),console.log(e.url),fetch(e.url).then((e=>{if(!e.ok)throw new Error(`response status : ${e.status}`);return e.json()})).then((e=>{o({data:e})})).catch((r=>{console.error("fetch error:",r),console.error("error url:",e.url),o({error:r.message})})),!0;if("fetchItem"===e.action){const t=10485760;return fetch(e.url).then((e=>e.blob())).then((async n=>{const a=Math.ceil(n.size/t);o({status:"start",totalChunks:a,totalSize:n.size,type:n.type});for(let o=0;o<a;o++){const s=o*t,l=Math.min(s+t,n.size),c=n.slice(s,l),i=new FileReader;await new Promise((t=>{i.onloadend=()=>{chrome.tabs.sendMessage(r.tab.id,{action:"receiveChunk",chunkIndex:o,totalChunks:a,dataUrl:i.result,progressBarId:e.progressBarId}),t()},i.readAsDataURL(c)}))}})).catch((o=>{console.error("chunk sending error:",o),chrome.tabs.sendMessage(r.tab.id,{action:"downloadError",downloadId:e.downloadId,error:o.toString()})})),!0}if("fetchThumbnail"===e.action)return console.log("fetchThumbnail"),console.log(e.url),fetch(e.url).then((e=>{if(!e.ok)throw new Error(`response status: ${e.status}`);return e.arrayBuffer()})).then((e=>{o({data:Array.from(new Uint8Array(e))})})).catch((e=>{console.error("fetch error",e),o({error:e.message,data:null})})),!0;"downloadZip"===e.action&&chrome.downloads.download({url:e.blobUrl,filename:e.filename,saveAs:!0},(e=>{chrome.runtime.lastError?console.error("Download failed:",chrome.runtime.lastError):console.log("Download started:",e)}))}));
//# sourceMappingURL=background.js.map
