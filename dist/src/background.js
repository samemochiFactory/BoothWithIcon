chrome.runtime.onMessage.addListener(((e,t,r)=>{if("fetchItemInfo"===e.action)return fetch(e.url).then((e=>{if(!e.ok)throw new Error(`response status : ${e.status}`);return e.json()})).then((e=>{r({data:e})})).catch((e=>{r({error:e.message})})),!0;if("fetchItem"===e.action){const a=10485760;return fetch(e.url).then((e=>e.blob())).then((async n=>{const o=Math.ceil(n.size/a);r({status:"start",totalChunks:o,totalSize:n.size,type:n.type});for(let r=0;r<o;r++){const s=r*a,i=Math.min(s+a,n.size),l=n.slice(s,i),c=new FileReader;await new Promise((a=>{c.onloadend=()=>{chrome.tabs.sendMessage(t.tab.id,{action:"receiveChunk",chunkIndex:r,totalChunks:o,dataUrl:c.result,progressBarId:e.progressBarId}),a()},c.readAsDataURL(l)}))}})).catch((r=>{chrome.tabs.sendMessage(t.tab.id,{action:"downloadError",downloadId:e.downloadId,error:r.toString()})})),!0}if("fetchThumbnail"===e.action)return fetch(e.url).then((e=>{if(!e.ok)throw new Error(`response status: ${e.status}`);return e.arrayBuffer()})).then((e=>{r({data:Array.from(new Uint8Array(e))})})).catch((e=>{r({error:e.message,data:null})})),!0;"downloadZip"===e.action&&chrome.downloads.download({url:e.blobUrl,filename:e.filename,saveAs:!0},(e=>{chrome.runtime.lastError}))})),chrome.runtime.onInstalled.addListener((e=>{"install"===e.reason&&chrome.storage.local.set({namingRules:["ファイル名"],includeItemPageLink:!0})}));
//# sourceMappingURL=background.js.map
