{"version":3,"file":"ico.js","sources":["../src/mime.js","../src/browser/image.js","../src/is-ico.js","../node_modules/to-data-view/index.js","../node_modules/decode-bmp/node_modules/to-data-view/index.js","../node_modules/@canvas/image-data/index.js","../node_modules/decode-bmp/index.js","../node_modules/decode-ico/index.js","../node_modules/decode-ico/node_modules/to-data-view/index.js","../src/browser/index.js","../src/parse.js"],"sourcesContent":["const MIME_BMP = 'image/bmp';\nconst MIME_JPEG = 'image/jpeg';\nconst MIME_PNG = 'image/png';\n\nconst mime = {\n  MIME_BMP,\n  MIME_JPEG,\n  MIME_PNG\n};\n\nexport { MIME_BMP, MIME_JPEG, MIME_PNG };\n\nexport default mime;\n","import { MIME_PNG } from '../mime.js';\n\nconst dataURLToArrayBuffer = dataURL => {\n  const string = atob(dataURL.replace(/.+,/u, ''));\n  const view = new Uint8Array(string.length);\n  for (let i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n  return view.buffer;\n};\n\nconst Image = {\n\n  /**\n   * Create imageData from image.\n   *\n   * @param {ArrayBuffer} arrayBuffer - Image buffer.\n   * @returns {ImageData} ImageData.\n   * @access private\n   */\n  decode (arrayBuffer) {\n    return new Promise(resolve => {\n      const url = URL.createObjectURL(new Blob([arrayBuffer]));\n      const img = document.createElement('img');\n      img.src = url;\n      img.onload = () => {\n        const { naturalHeight: height, naturalWidth: width } = img;\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(img, 0, 0);\n        const { data } = ctx.getImageData(0, 0, width, height);\n        resolve({\n          data,\n          height,\n          width\n        });\n      };\n    });\n  },\n\n  /**\n   * Create image from imgData.data.\n   *\n   * @param {object} image - Data.\n   * @param {number} image.width - Image width in pixels.\n   * @param {number} image.height - Image height in pixels.\n   * @param {Uint8ClampedArray} image.data - Same as imageData.data.\n   * @param {string} [mime=image/png] - MIME type.\n   * @returns {ArrayBuffer} Image.\n   * @access private\n   */\n  encode (image, mime = MIME_PNG) {\n    return new Promise(resolve => {\n      const { data, height, width } = image;\n      const canvas = document.createElement('canvas');\n      canvas.width = width;\n      canvas.height = height;\n      const ctx = canvas.getContext('2d');\n      const imageData = ctx.createImageData(width, height);\n      const dataData = imageData.data;\n      for (let i = 0; i < dataData.length; i++) {\n        dataData[i] = data[i];\n      }\n      ctx.putImageData(imageData, 0, 0);\n      resolve(dataURLToArrayBuffer(canvas.toDataURL(mime)));\n    });\n  }\n};\n\nexport default Image;\n","import toDataView from 'to-data-view';\n\n/**\n * Check the ArrayBuffer is valid ICO.\n *\n * @alias module:ICO\n * @param {ArrayBuffer|Buffer} source - ICO file data.\n * @returns {boolean} True if arg is ICO.\n */\nconst isICO = source => {\n  const dataView = toDataView(source);\n  return dataView.getUint16(0, true) === 0 && dataView.getUint16(2, true) === 1;\n};\n\nexport { isICO };\n\nexport default isICO;\n","export default function toDataView (data) {\n  if (data instanceof Int8Array || data instanceof Uint8Array || data instanceof Uint8ClampedArray) {\n    return new DataView(data.buffer, data.byteOffset, data.byteLength)\n  }\n\n  if (data instanceof ArrayBuffer) {\n    return new DataView(data)\n  }\n\n  throw new TypeError('Expected `data` to be an ArrayBuffer, Buffer, Int8Array, Uint8Array or Uint8ClampedArray')\n}\n","module.exports = function toDataView (data) {\n  if (data instanceof Int8Array || data instanceof Uint8Array || data instanceof Uint8ClampedArray) {\n    return new DataView(data.buffer, data.byteOffset, data.byteLength)\n  }\n\n  if (data instanceof ArrayBuffer) {\n    return new DataView(data)\n  }\n\n  throw new TypeError('Expected `data` to be an ArrayBuffer, Buffer, Int8Array, Uint8Array or Uint8ClampedArray')\n}\n","const widthMap = new WeakMap()\nconst heightMap = new WeakMap()\n\nclass ImageData {\n  constructor (width, height, ...args) {\n    if (arguments.length < 2) {\n      throw new TypeError(`Failed to construct 'ImageData': 2 arguments required, but only ${arguments.length} present.`)\n    }\n\n    if (typeof width === 'object') {\n      if (!(width instanceof Uint8ClampedArray)) {\n        throw new TypeError(`Failed to construct 'ImageData': parameter 1 is not of type 'Uint8ClampedArray'.`)\n      }\n\n      if (typeof height !== 'number' || height === 0) {\n        throw new Error(`Failed to construct 'ImageData': The source width is zero or not a number.`)\n      }\n\n      height = height >>> 0\n\n      if ((height * 4) > width.length) {\n        throw new Error(`Failed to construct 'ImageData': The requested image size exceeds the supported range.`)\n      }\n\n      if ((width.length % 4) !== 0) {\n        throw new Error(`Failed to construct 'ImageData': The input data length is not a multiple of 4.`)\n      }\n\n      if ((width.length % (4 * height)) !== 0) {\n        throw new Error(`Failed to construct 'ImageData': The input data length is not a multiple of (4 * width).`)\n      }\n\n      if (typeof args[0] !== 'undefined') {\n        if (typeof args[0] !== 'number' || args[0] === 0) {\n          throw new Error(`Failed to construct 'ImageData': The source height is zero or not a number.`)\n        }\n\n        args[0] = args[0] >>> 0\n\n        if ((width.length % (4 * height * args[0])) !== 0) {\n          throw new Error(`Failed to construct 'ImageData': The input data length is not equal to (4 * width * height).`)\n        }\n      }\n\n      widthMap.set(this, height)\n      heightMap.set(this, typeof args[0] !== 'undefined' ? args[0] : (width.byteLength / height / 4))\n      Object.defineProperty(this, 'data', { configurable: true, enumerable: true, value: width, writable: false })\n    } else {\n      if (typeof width !== 'number' || width === 0) {\n        throw new Error(`Failed to construct 'ImageData': The source width is zero or not a number.`)\n      }\n\n      width = width >>> 0\n\n      if (typeof height !== 'number' || height === 0) {\n        throw new Error(`Failed to construct 'ImageData': The source height is zero or not a number.`)\n      }\n\n      height = height >>> 0\n\n      if ((width * height) >= (1 << 30)) {\n        throw new Error(`Failed to construct 'ImageData': The requested image size exceeds the supported range.`)\n      }\n\n      widthMap.set(this, width)\n      heightMap.set(this, height)\n      Object.defineProperty(this, 'data', { configurable: true, enumerable: true, value: new Uint8ClampedArray(width * height * 4), writable: false })\n    }\n  }\n}\n\nObject.defineProperty(ImageData.prototype, 'width', {\n  enumerable: true,\n  configurable: true,\n  get () { return widthMap.get(this) }\n})\n\nObject.defineProperty(ImageData.prototype, 'height', {\n  enumerable: true,\n  configurable: true,\n  get () { return heightMap.get(this) }\n})\n\nmodule.exports = ImageData\n","const toDataView = require('to-data-view')\nconst ImageData = require('@canvas/image-data')\n\nfunction makeDivisibleByFour (input) {\n  const rest = input % 4\n\n  return rest ? input + 4 - rest : input\n}\n\nclass Bitmap {\n  constructor (data, offset, { width, height, colorDepth, format }) {\n    this.format = format\n    this.offset = offset\n    this.depth = colorDepth\n    this.stride = makeDivisibleByFour(width * this.depth / 8)\n    this.size = (this.stride * height)\n    this.data = data.slice(this.offset, this.offset + this.size)\n\n    if (this.size !== this.data.byteLength) {\n      throw new Error('Truncated bitmap data')\n    }\n  }\n\n  get (x, y, channel) {\n    const idx = this.format.indexOf(channel)\n\n    if (this.depth === 1) {\n      const slice = this.data[(y * this.stride) + (x / 8 | 0)]\n      const mask = 1 << (7 - (x % 8) * 1)\n\n      return (slice & mask) >> (7 - (x % 8) * 1)\n    }\n\n    if (this.depth === 2) {\n      const slice = this.data[(y * this.stride) + (x / 4 | 0)]\n      const mask = 3 << (6 - (x % 4) * 2)\n\n      return (slice & mask) >>> (6 - (x % 4) * 2)\n    }\n\n    if (this.depth === 4) {\n      const slice = this.data[(y * this.stride) + (x / 2 | 0)]\n      const mask = 15 << (4 - (x % 2) * 4)\n\n      return (slice & mask) >>> (4 - (x % 2) * 4)\n    }\n\n    return this.data[(y * this.stride) + (x * (this.depth / 8)) + idx]\n  }\n}\n\nfunction decodeTrueColorBmp (data, { width, height, colorDepth, icon }) {\n  if (colorDepth !== 32 && colorDepth !== 24) {\n    throw new Error(`A color depth of ${colorDepth} is not supported`)\n  }\n\n  const xor = new Bitmap(data, 0, { width, height, colorDepth, format: 'BGRA' })\n  const and = (colorDepth === 24 && icon)\n    ? new Bitmap(data, xor.offset + xor.size, { width, height, colorDepth: 1, format: 'A' })\n    : null\n\n  const result = new Uint8Array(width * height * 4)\n\n  let idx = 0\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      result[idx++] = xor.get(x, height - y - 1, 'R')\n      result[idx++] = xor.get(x, height - y - 1, 'G')\n      result[idx++] = xor.get(x, height - y - 1, 'B')\n\n      if (colorDepth === 32) {\n        result[idx++] = xor.get(x, height - y - 1, 'A')\n      } else {\n        result[idx++] = and && and.get(x, height - y - 1, 'A') ? 0 : 255\n      }\n    }\n  }\n\n  return new Uint8ClampedArray(result.buffer, result.byteOffset, result.byteLength)\n}\n\nfunction decodePaletteBmp (data, { width, height, colorDepth, colorCount, icon }) {\n  if (colorDepth !== 8 && colorDepth !== 4 && colorDepth !== 2 && colorDepth !== 1) {\n    throw new Error(`A color depth of ${colorDepth} is not supported`)\n  }\n\n  const colors = new Bitmap(data, 0, { width: colorCount, height: 1, colorDepth: 32, format: 'BGRA' })\n  const xor = new Bitmap(data, colors.offset + colors.size, { width, height, colorDepth, format: 'C' })\n  const and = icon ? new Bitmap(data, xor.offset + xor.size, { width, height, colorDepth: 1, format: 'A' }) : null\n\n  const result = new Uint8Array(width * height * 4)\n\n  let idx = 0\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const colorIndex = xor.get(x, height - y - 1, 'C')\n\n      result[idx++] = colors.get(colorIndex, 0, 'R')\n      result[idx++] = colors.get(colorIndex, 0, 'G')\n      result[idx++] = colors.get(colorIndex, 0, 'B')\n      result[idx++] = and && and.get(x, height - y - 1, 'A') ? 0 : 255\n    }\n  }\n\n  return new Uint8ClampedArray(result.buffer, result.byteOffset, result.byteLength)\n}\n\nfunction checkMagicBytes (bytes) {\n  if (bytes !== 0x4D42) throw new Error(`Invalid magic byte 0x${bytes.toString(16)}`)\n}\n\nmodule.exports = function decodeBmp (source, { width: iconWidth = 0, height: iconHeight = 0, icon = false } = {}) {\n  const data = toDataView(source)\n\n  let headerSize\n  let bitmapWidth\n  let bitmapHeight\n  let colorDepth\n  let colorCount\n\n  if (icon) {\n    headerSize = data.getUint32(0, true)\n    bitmapWidth = (data.getUint32(4, true) / 1) | 0\n    bitmapHeight = (data.getUint32(8, true) / 2) | 0\n    colorDepth = data.getUint16(14, true)\n    colorCount = data.getUint32(32, true)\n  } else {\n    checkMagicBytes(data.getUint16(0, true))\n    headerSize = 14 + data.getUint32(14, true)\n    bitmapWidth = data.getUint32(18, true)\n    bitmapHeight = data.getUint32(22, true)\n    colorDepth = data.getUint16(28, true)\n    colorCount = data.getUint32(46, true)\n  }\n\n  if (colorCount === 0 && colorDepth <= 8) {\n    colorCount = (1 << colorDepth)\n  }\n\n  const width = (bitmapWidth === 0 ? iconWidth : bitmapWidth)\n  const height = (bitmapHeight === 0 ? iconHeight : bitmapHeight)\n\n  const bitmapData = new Uint8Array(data.buffer, data.byteOffset + headerSize, data.byteLength - headerSize)\n\n  const result = colorCount\n    ? decodePaletteBmp(bitmapData, { width, height, colorDepth, colorCount, icon })\n    : decodeTrueColorBmp(bitmapData, { width, height, colorDepth, icon })\n\n  return Object.assign(new ImageData(result, width, height), { colorDepth })\n}\n","const toDataView = require('to-data-view')\nconst decodeBmp = require('decode-bmp')\nconst ImageData = require('@canvas/image-data')\n\nfunction isPng (view, offset) {\n  return (view.getUint32(offset + 0) === 0x89504e47 && view.getUint32(offset + 4) === 0x0d0a1a0a)\n}\n\nfunction pngBitsPerPixel (view, offset) {\n  const bitDepth = view.getUint8(offset + 24)\n  const colorType = view.getUint8(offset + 25)\n\n  if (colorType === 0) return bitDepth * 1\n  if (colorType === 2) return bitDepth * 3\n  if (colorType === 3) return bitDepth * 1\n  if (colorType === 4) return bitDepth * 2\n  if (colorType === 6) return bitDepth * 4\n\n  throw new Error('Invalid PNG colorType')\n}\n\nfunction pngWidth (view, offset) {\n  return view.getUint32(offset + 16, false)\n}\n\nfunction pngHeight (view, offset) {\n  return view.getUint32(offset + 20, false)\n}\n\nmodule.exports = function decodeIco (input) {\n  const view = toDataView(input)\n\n  if (view.byteLength < 6) {\n    throw new Error('Truncated header')\n  }\n\n  if (isPng(view, 0)) {\n    // the file is actually a png masquerading as an ico\n\n    return [{\n      bpp: pngBitsPerPixel(view, 0),\n      data: new Uint8Array(view.buffer, view.byteOffset, view.byteLength),\n      height: pngHeight(view, 0),\n      hotspot: null,\n      type: 'png',\n      width: pngWidth(view, 0)\n    }]\n  }\n\n  if (view.getUint16(0, true) !== 0) {\n    throw new Error('Invalid magic bytes')\n  }\n\n  const type = view.getUint16(2, true)\n\n  if (type !== 1 && type !== 2) {\n    throw new Error('Invalid image type')\n  }\n\n  const length = view.getUint16(4, true)\n\n  if (view.byteLength < 6 + (16 * length)) {\n    throw new Error('Truncated image list')\n  }\n\n  return Array.from({ length }, (_, idx) => {\n    const width = view.getUint8(6 + (16 * idx) + 0)\n    const height = view.getUint8(6 + (16 * idx) + 1)\n    const size = view.getUint32(6 + (16 * idx) + 8, true)\n    const offset = view.getUint32(6 + (16 * idx) + 12, true)\n\n    const hotspot = (type !== 2 ? null : {\n      x: view.getUint16(6 + (16 * idx) + 4, true),\n      y: view.getUint16(6 + (16 * idx) + 6, true)\n    })\n\n    if (isPng(view, offset)) {\n      return {\n        bpp: pngBitsPerPixel(view, offset),\n        data: new Uint8Array(view.buffer, view.byteOffset + offset, size),\n        height: pngHeight(view, offset),\n        hotspot,\n        type: 'png',\n        width: pngWidth(view, offset)\n      }\n    }\n\n    const data = new Uint8Array(view.buffer, view.byteOffset + offset, size)\n    const bmp = decodeBmp(data, { width, height, icon: true })\n    const info = { bpp: bmp.colorDepth, hotspot, type: 'bmp' }\n\n    return Object.assign(new ImageData(bmp.data, bmp.width, bmp.height), info)\n  })\n}\n","module.exports = function toDataView (data) {\n  if (data instanceof Int8Array || data instanceof Uint8Array || data instanceof Uint8ClampedArray) {\n    return new DataView(data.buffer, data.byteOffset, data.byteLength)\n  }\n\n  if (data instanceof ArrayBuffer) {\n    return new DataView(data)\n  }\n\n  throw new TypeError('Expected `data` to be an ArrayBuffer, Buffer, Int8Array, Uint8Array or Uint8ClampedArray')\n}\n","import Image from './image.js';\nimport { MIME_PNG } from '../mime.js';\nimport { isICO } from '../is-ico.js';\nimport { parse } from '../parse.js';\n\nconst parseICO = (arrayBuffer, mime = MIME_PNG) => parse(arrayBuffer, mime, Image);\n\nconst ICO = {\n  isICO,\n  parseICO\n};\n\nexport { isICO, parseICO };\n\nexport default ICO;\n","import { MIME_PNG } from './mime.js';\nimport decodeIco from 'decode-ico';\n\n/**\n * @typedef {object} ParsedImage\n * @property {number} width Image width.\n * @property {number} height Image height.\n * @property {number} bpp Image color depth as bits per pixel.\n * @property {ArrayBuffer} buffer Image buffer.\n */\n\n/**\n * Parse ICO and return some image object.\n *\n * @param {ArrayBuffer|Buffer} data - ICO file data.\n * @param {string} mime - MIME type for output.\n * @param {object} Image - Image encoder/decoder.\n * @returns {Promise<ParsedImage[]>} Resolves to an array of {@link ParsedImage}.\n * @access private\n */\nconst parse = async (data, mime, Image) => {\n  const icons = decodeIco(data);\n\n  const transcodeImage = async icon => {\n    if (mime === MIME_PNG && icon.type === 'png') {\n      return {\n        ...icon,\n        buffer: icon.data.buffer.slice(icon.data.byteOffset, icon.data.byteOffset + icon.data.byteLength)\n      };\n    }\n\n    if (icon.type === 'png') {\n      const decoded = await Image.decode(icon.data);\n      Object.assign(icon, {\n        data: decoded.data,\n        type: 'bmp'\n      });\n    }\n\n    return Object.assign(icon, {\n      buffer: await Image.encode(icon, mime),\n      type: mime.replace('image/', '')\n    });\n  };\n\n  const parsedImages = await Promise.all(icons.map(transcodeImage));\n  return parsedImages;\n};\n\nexport { parse };\n\nexport default parse;\n"],"names":["MIME_PNG","Image","decode","arrayBuffer","Promise","resolve","url","URL","createObjectURL","Blob","img","document","createElement","src","onload","height","naturalHeight","width","naturalWidth","canvas","ctx","getContext","drawImage","data","getImageData","encode","image","mime","arguments","length","undefined","imageData","createImageData","dataData","i","putImageData","dataURL","string","atob","replace","view","Uint8Array","charCodeAt","buffer","dataURLToArrayBuffer","toDataURL","isICO","source","dataView","Int8Array","Uint8ClampedArray","DataView","byteOffset","byteLength","ArrayBuffer","TypeError","toDataView","getUint16","widthMap","WeakMap","heightMap","ImageData","_createClass","_len","args","Array","_key","_classCallCheck","concat","_typeof","Error","set","this","Object","defineProperty","configurable","enumerable","value","writable","prototype","get","require$$0","require$$1","Bitmap","offset","_ref","input","rest","colorDepth","format","depth","stride","size","slice","key","x","y","channel","idx","indexOf","decodeBmp","headerSize","bitmapWidth","bitmapHeight","colorCount","_ref4","_ref4$width","iconWidth","_ref4$height","iconHeight","_ref4$icon","icon","getUint32","bytes","toString","checkMagicBytes","bitmapData","result","_ref3","colors","xor","and","colorIndex","decodePaletteBmp","_ref2","decodeTrueColorBmp","assign","require$$2","isPng","pngBitsPerPixel","bitDepth","getUint8","colorType","pngWidth","pngHeight","decodeIco","bpp","hotspot","type","from","_","bmp","info","parseICO","async","icons","all","map","_objectSpread","decoded","parse","ICO"],"mappings":"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","x_google_ignoreList":[3,4,5,6,7,8]}